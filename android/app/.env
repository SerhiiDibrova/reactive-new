package com.example.app

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.Response
import org.json.JSONArray
import org.json.JSONObject
import java.io.File
import java.io.IOException
import java.util.Properties

class MainActivity : AppCompatActivity() {
    private lateinit var giphyApiKey: String

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        loadApiKey()
        if (giphyApiKey.isNotEmpty()) {
            getGifList("funny")
        }
    }

    private fun loadApiKey() {
        val properties = Properties()
        val envFile = File("${applicationContext.filesDir}/../.env")
        if (envFile.exists()) {
            try {
                properties.load(envFile.inputStream())
                giphyApiKey = properties.getProperty("GIPHY_API_KEY") ?: ""
            } catch (e: IOException) {
                e.printStackTrace()
            }
        }
    }

    private fun getGifList(query: String) {
        val url = "https://api.giphy.com/v1/gifs/search?api_key=$giphyApiKey&q=$query&limit=10"
        val client = OkHttpClient()
        val request = Request.Builder().url(url).build()

        client.newCall(request).enqueue(object : okhttp3.Callback {
            override fun onFailure(call: okhttp3.Call, e: IOException) {
                e.printStackTrace()
            }

            override fun onResponse(call: okhttp3.Call, response: Response) {
                if (response.isSuccessful) {
                    val responseData = response.body?.string()
                    val jsonObject = JSONObject(responseData)
                    val gifList: JSONArray = jsonObject.getJSONArray("data")
                    processGifList(gifList)
                }
            }
        })
    }

    private fun processGifList(gifList: JSONArray) {
        for (i in 0 until gifList.length()) {
            val gifObject = gifList.getJSONObject(i)
            // Process each gifObject as needed
        }
    }
}